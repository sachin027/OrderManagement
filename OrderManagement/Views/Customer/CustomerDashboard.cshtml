@model OrderManagement_Model.CustomModel.RegistrationModel
@{
    ViewBag.Title = "CustomerDashboard";
    Layout = "~/Views/Shared/_LayoutCustomerPage.cshtml";
}

<h2>CustomerDashboard</h2>

<form method="post">
    @*<div class="form-group">
            <img src="~/Content/Theme/Registration/Uploads/@Model.profilePicture" style="width:100px ; height:100px"/>
            <input type="file" name="ImageFile"/>
        </div>*@

    <div class="form-group">
        <img id="profileImage" src="~/Content/Theme/Registration/Uploads/@Model.profilePicture" style="width:100px ; height:100px; cursor:pointer;" onclick="chooseFile()" />
        <input type="file" id="fileInput" name="profilePicture" style="display: none;" onchange="previewImage(this)" />
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Username)
        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName)
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName)
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password)
        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword)
        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
    <button type="submit" onclick="SaveButton()" >Save</button>
</form>


<script>
    function chooseFile() {
        document.getElementById('fileInput').click();
    }

    function previewImage(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('profileImage').src = e.target.result;
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
    function SaveButton() {
        console.log("click");
    }
</script>